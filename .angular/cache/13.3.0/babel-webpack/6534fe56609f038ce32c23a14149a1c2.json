{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\ces\\\\Documents\\\\proyects\\\\frontend\\\\bolivar\\\\home-example-mf\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { loadRemoteModule } from '@angular-architects/module-federation';\nimport * as i0 from \"@angular/core\";\nexport let LoadRemoteComponentService = /*#__PURE__*/(() => {\n  class LoadRemoteComponentService {\n    constructor() {}\n\n    loadComponent(container, componentData) {\n      return _asyncToGenerator(function* () {\n        container.clear();\n        const component = yield loadRemoteModule({ ...componentData\n        });\n        console.log(component);\n\n        if (component && component[component.componentName]) {\n          const ref = component[componentData.componentName].instance;\n          console.log('asdasd');\n          const {\n            props,\n            events\n          } = componentData.config;\n\n          if (props) {\n            for (let prop in props) {\n              console.log(`aplicando los pros ${prop} con el valor de ${props[prop]}`);\n              ref[prop] = componentData.config.props[prop];\n            }\n          }\n\n          if (events && events.length > 0) {\n            events.forEach(ev => {\n              console.log(`suscribiendo el event ${ev.eventName}`);\n              ref[ev.eventName].subscribe(ev.eventHandler);\n            });\n          }\n\n          return ref;\n        }\n\n        return null;\n      })();\n    }\n\n  }\n\n  LoadRemoteComponentService.ɵfac = function LoadRemoteComponentService_Factory(t) {\n    return new (t || LoadRemoteComponentService)();\n  };\n\n  LoadRemoteComponentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadRemoteComponentService,\n    factory: LoadRemoteComponentService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoadRemoteComponentService;\n})();","map":null,"metadata":{},"sourceType":"module"}