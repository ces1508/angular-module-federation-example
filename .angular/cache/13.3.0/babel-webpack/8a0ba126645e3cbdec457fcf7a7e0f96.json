{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\ces\\\\Documents\\\\proyects\\\\frontend\\\\bolivar\\\\home-example-mf\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { loadRemoteModule } from '@angular-architects/module-federation';\nimport * as i0 from \"@angular/core\";\nexport let LoadRemoteComponentService = /*#__PURE__*/(() => {\n  class LoadRemoteComponentService {\n    constructor() {}\n\n    loadComponent(container, componentData) {\n      return _asyncToGenerator(function* () {\n        try {\n          container.clear();\n          const component = yield loadRemoteModule({ ...componentData\n          });\n\n          if (component && component[componentData.componentName]) {\n            const ref = container.createComponent(component[componentData.componentName]).instance;\n            const {\n              props,\n              events\n            } = componentData.config;\n\n            if (props) {\n              for (let prop in props) {\n                ref[prop] = componentData.config.props[prop];\n              }\n            }\n\n            if (events && events.length > 0) {\n              events.forEach(ev => {\n                ref[ev.eventName].subscribe(ev.eventHandler);\n              });\n            }\n\n            return ref;\n          }\n        } catch (e) {\n          console.warn(`failed to create remote component ${componentData.componentName}`);\n          return null;\n        }\n      })();\n    }\n\n  }\n\n  LoadRemoteComponentService.ɵfac = function LoadRemoteComponentService_Factory(t) {\n    return new (t || LoadRemoteComponentService)();\n  };\n\n  LoadRemoteComponentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadRemoteComponentService,\n    factory: LoadRemoteComponentService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoadRemoteComponentService;\n})();","map":null,"metadata":{},"sourceType":"module"}