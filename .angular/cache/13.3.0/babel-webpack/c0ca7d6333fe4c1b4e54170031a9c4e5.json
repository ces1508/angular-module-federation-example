{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [[[\"\", \"header\", \"\"]], \"*\", [[\"\", \"footer\", \"\"]]];\nconst _c1 = [\"[header]\", \"*\", \"[footer]\"];\nexport let SomethingComponent = /*#__PURE__*/(() => {\n  class SomethingComponent {\n    constructor() {\n      this.onHandleClick = new EventEmitter();\n    }\n\n    handleButtonClick() {\n      this.onHandleClick.emit('evento enviando desde un microfront');\n    }\n\n  }\n\n  SomethingComponent.ɵfac = function SomethingComponent_Factory(t) {\n    return new (t || SomethingComponent)();\n  };\n\n  SomethingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SomethingComponent,\n    selectors: [[\"app-something\"]],\n    inputs: {\n      data: \"data\"\n    },\n    outputs: {\n      onHandleClick: \"onHandleClick\"\n    },\n    ngContentSelectors: _c1,\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"something\"], [1, \"title\"], [3, \"click\"]],\n    template: function SomethingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"componente que hace pare de avaluos mf\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \" este componente es una prueba para saber como utilizar componentes de forma normal importandolo desde un microfronted externo y pasando inputs \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \" el texto input sera el siguiente \");\n        i0.ɵɵelementStart(7, \"q\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\")(10, \"hr\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function SomethingComponent_Template_button_click_12_listener() {\n          return ctx.handleButtonClick();\n        });\n        i0.ɵɵtext(13, \"Clic para emitir evento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵprojection(15);\n        i0.ɵɵprojection(16, 1);\n        i0.ɵɵprojection(17, 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.text);\n      }\n    },\n    styles: [\"\"]\n  });\n  return SomethingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}